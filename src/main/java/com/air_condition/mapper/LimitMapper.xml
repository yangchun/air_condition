<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.air_condition.dao.LimitMapper" >
  <resultMap id="BaseResultMap" type="com.air_condition.domain.Limit" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="limitname" property="limitname" jdbcType="VARCHAR" />
    <result column="limitcode" property="limitcode" jdbcType="VARCHAR" />
    <result column="limitdesc" property="limitdesc" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, limitname, limitcode, limitdesc, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from air_condition.`limit`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from air_condition.`limit`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.air_condition.domain.Limit" >
    insert into air_condition.`limit` (id, limitname, limitcode, 
      limitdesc, state)
    values (#{id,jdbcType=INTEGER}, #{limitname,jdbcType=VARCHAR}, #{limitcode,jdbcType=VARCHAR}, 
      #{limitdesc,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.air_condition.domain.Limit" >
    insert into air_condition.`limit`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="limitname != null" >
        limitname,
      </if>
      <if test="limitcode != null" >
        limitcode,
      </if>
      <if test="limitdesc != null" >
        limitdesc,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="limitname != null" >
        #{limitname,jdbcType=VARCHAR},
      </if>
      <if test="limitcode != null" >
        #{limitcode,jdbcType=VARCHAR},
      </if>
      <if test="limitdesc != null" >
        #{limitdesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.air_condition.domain.Limit" >
    update air_condition.`limit`
    <set >
      <if test="limitname != null" >
        limitname = #{limitname,jdbcType=VARCHAR},
      </if>
      <if test="limitcode != null" >
        limitcode = #{limitcode,jdbcType=VARCHAR},
      </if>
      <if test="limitdesc != null" >
        limitdesc = #{limitdesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.air_condition.domain.Limit" >
    update air_condition.`limit`
    set limitname = #{limitname,jdbcType=VARCHAR},
      limitcode = #{limitcode,jdbcType=VARCHAR},
      limitdesc = #{limitdesc,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getAllLimits" resultType="java.util.Map">
  		select id,limitcode,limitdesc,state from air_condition.`limit`
  </select>
  
   <select id="getLimitsByRoleId" resultType="java.util.Map">
  		select id,limitcode from air_condition.`limit` where id in (select limitid from role_limit where roleid=#{0})
  </select>
  
  
</mapper>